<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sstractor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mspeed = 0;
mfriction = 0.01;
mdir = 0;
xspeed = 0;
yspeed = 0;

turnspeed = 5;
nfriction = 0.05;
bfriction = 0.1;
aspeed = 0.4;
rspeed = aspeed * 0.3;
maxspeed = 4;

global._part_system = part_system_create();

part_system_automatic_update(global._part_system, true);
part_system_automatic_draw(global._part_system, true);
var _fps = room_speed;//(gamespeed_fps);

/* dirt */
global._part_type_0 = part_type_create();
part_type_speed(global._part_type_0, 0, 0, 0, 0);
part_type_direction(global._part_type_0, 0, 0, 0, 0);
part_type_gravity(global._part_type_0, 0, 0);
part_type_orientation(global._part_type_0, 0, 360, 0, 0, 0);
part_type_size(global._part_type_0, 1, 1, 0, 0);
part_type_scale(global._part_type_0, 1, 1);
part_type_life(global._part_type_0, 20 * _fps, 60 * _fps);
part_type_blend(global._part_type_0, false);
part_type_color_mix(global._part_type_0, 1827839, 1739263);
part_type_alpha1(global._part_type_0, 1);
part_type_shape(global._part_type_0, pt_shape_cloud);

/* Default Emitter */
global._part_emitter_0 = part_emitter_create(global._part_system);
/*

part_emitter_region(global._part_system, global._part_emitter_0, 160, 240, 160, 240, ps_shape_ellipse, ps_distr_linear);
var _odds = 120;
if (_odds &lt; _fps) {
    var _rate =  -1 / (_odds / _fps);
} else {
    var _rate = _odds / _fps;
}
part_emitter_stream(global._part_system, global._part_emitter_0, global._part_type_0, _rate);
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check(ord('A'))) {
   mdir += turnspeed;
}


if (keyboard_check(ord('D'))) {
   mdir -= turnspeed;
}


if (keyboard_check(ord('W'))) {
   xspeed += lengthdir_x(aspeed, image_angle)
   yspeed += lengthdir_y(aspeed, image_angle)
   
}


image_angle = mdir;
//direction = lerp(direction, image_angle, 0.02);
//speed = mspeed;   

// clamp max speed
n = sqrt(sqr(xspeed) +  sqr(yspeed))
if (n &gt; maxspeed) {
    f = maxspeed / n
    xspeed *= f
    yspeed *= f
}
   
x += xspeed;
y += yspeed;

if (keyboard_check(ord('S'))) {
   mfriction = bfriction;
} else {
   mfriction = nfriction;
}


yspeed -= yspeed * mfriction;
xspeed -= xspeed * mfriction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="grain">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy(other);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.5</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
